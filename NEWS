Changes in dconf 0.14.1
========================

 - fix a rather substantial memory leak in dconf-service

 - fix xinclude issues in docs for srcdir != builddir

 - using the g_settings_delay()/g_settings_reset()/g_settings_get()
   trick to read default values is working again

 - Updated translations: Arabic, Bulgarian, Norwegian bokmål, Slovak.

Changes in dconf 0.14.0
========================

Translations:

 - Belarusian
 - Bengali
 - Brazilian Portuguese
 - British English
 - Catalan
 - Catalan (Valencia)
 - Czech
 - Danish
 - Estonian
 - Finnish
 - French
 - German
 - Hebrew
 - Hindi
 - Hungarian
 - Indonesian
 - Italian
 - Japanese
 - Korean
 - Latvian
 - Lithuanian
 - Malayalam
 - Marathi
 - Norwegian bokmål
 - Persian
 - Polish
 - Portuguese
 - Russian
 - Simplified Chinese
 - Slovenian
 - Swedish
 - Tamil
 - Telugu
 - Thai
 - Vietnamese

Changes in dconf 0.13.90
=========================

The only change in this release is the addition of many translations for
dconf-editor:

 - Traditional Chinese
 - Serbian
 - Ukrainian
 - Punjabi
 - Greek
 - Galician
 - Spanish
 - Assamese
 - Polish
 - Hungarian

Changes in dconf 0.13.5
========================

 - the service no longer attempts to migrate the primary dconf database from
   its (years) old path ~/.config/dconf to the new ~/.config/dconf/user

 - fixes for profile file parsing problems

 - fix obscure race in GDBus handling code that could result in
   out-of-order message delivery

 - editor:
  - clean up some messages and mark strings for translations
  - enable NLS
  - add Esperanto translation

 - add manpages for dconf(7), dconf(1), dconf-service and dconf-editor

Changes in dconf 0.13.4 (since 0.13.0)
=======================================

 - extensively refactored -- watch for bugs

 - now depends on GLib 2.33.3 for g_slist_copy_deep() and
   g_clear_pointer() with workaround for GCC

 - API of libdconf has changed; soname bumped to libdconf.so.1

 - installed header layout has changed

 - there are changes to the API used between the client and the service.
   New clients will only talk with the new service (so make sure to
   restart it).  Old clients (ie: already-running programs) will
   continue to be able to talk to the new service version.

 - there is a now a fairly decent test suite but it requires a full
   D-Bus environment to run in, so it may make sense to avoid 'make
   check' on builders for the time being

Changes in dconf 0.13.0
=======================

 - now requiring Vala 0.18 (ie: at least 0.17.0)

 - editor: use GtkApplication and GMenu
 - editor: support searching for keys

 - dconf cli: call setlocale() on startup

Changes in dconf 0.11.7
=======================

 - engine: don't leak the lock table if a system database changes while
   a program is running

 - dbus-1: call g_slist_remove_link instead of g_slist_remove

 - editor: set 'wrap' property on default value label

 - dconf update:

   - code cleanup, better error handling
   - read keyfiles in a defined order (later files take precedence)
   - don't issue warnings if a key is defined in multiple files

Changes in dconf 0.11.6
=======================

 - new DCONF_BLAME mode for debugging spurious dconf writes at login

 - stop hardcoding the assumption that there will be exactly one user
   database followed by zero or more system databases

 - allow DCONF_PROFILE to specify a profile file by absolute path

 - dbus-1: fix multiple-key change notifications

 - autogen.sh can now be called from out of tree

Changes in dconf 0.11.5
=======================

 - do not install non-standard icon sizes

 - fix a bug with getting default values when no profile is in use

 - some general code cleanups on the client side

 - improve Makefile compatibility: avoid using 'echo -e'

Changes in dconf 0.11.3
=======================

 - works with (and only with) Vala 0.15.1

 - we now have an icon for dconf-editor

Changes in dconf 0.11.2
=======================

 - many bugfixes and improvements to the editor, most notably porting to
   GtkGrid to avoid the GtkTable layout bug that was causing size to be
   incorrectly allocated

 - fix a crasher due to invalid string index of -1

Changes in dconf 0.10.0
=======================

The version number was increased and a new entry was added to the NEWS.

Changes in dconf 0.9.1
======================

  - give a g_warning() on failure to communicate with service

  - remove unworking 'set lock' call from dconf API and commandline tool

  - add code to exit gracefully on receipt of SIGINT, SIGHUP, SIGTERM

  - remove "service function" logic; always use the XDG runtime directory

Changes in dconf 0.9.0
======================

There has been an extremely minor incompatible change in the D-Bus API
of dconf this release.  From a practical standpoint, this change will
have no effect.  However, it serves as a reminder that the dconf D-Bus
API is private and can change from version to version (and will likely
change in the future).

As such, it is appropriate for those packaging dconf to kill all running
instances of dconf ('killall dconf-service') as part of their postinst
for the package.  It will be dbus-activated again on the next use.

  - support loading/storing of maybe types in dconf

  - remove NFS detection hackery and rely on XDG runtime dir

  - add proper support for change notification to DConfClient

  - commandline tool improvements

    - reset: reset keys or entire subpaths

    - dump: dump entire subpaths to keyfile format

    - load: load them back again (maybe at a different path)

    - watch: actually works now

  - editor improvements

    - keys now change in editor when changed from outside

    - support for flags

    - show dconf-editor in applications list

  - work around incompatible Vala bindings changes with an #if

  - don't install the bash completion script as executable

  - fix a warning caused by reusing a GError variable

  - other small fixes


Changes in dconf 0.7.5
======================

This release corrects a serious flaw in the previous release: crashing
if the database did not already exist.

It also contains many fixes and improvements to the dconf-editor,
including use of GSettings to store the window geometry.

This is the final release before 0.8.0 which will become the first
release in a new stable series.  Feature development will continue on
'master' toward 0.9 past that point.

Changes in dconf 0.7.4
======================

Changes in this version:

  - #648949: multithreading issue fixed (which actually affects all
    GSettings-using programs since dconf is used from a helper thread in
    that case)

  - dconf commandline tool is vastly more friendly now

    - no more aborting on unrecognised arguments

    - proper help

    - bash completion support

  - support for sysadmin lockdown

  - the editor now properly reads installed enum xml files

Changes in dconf 0.7.3
======================

This release consists almost entirely of fixes made by Robert to
dconf-editor.  A few other trivial build fixes are included as well
(bumping library version dependencies to match reality, etc).

Changes in dconf 0.7.2
======================

This is entirely a cleanup/fixes release.  Some fixes here to make the
increasingly-strict toolchain happy, and also some fixes for some
crashers in the GSettings backend and service.

 - remove some unused variables (new GCC gives a warning: #640566, another)
 - add a mutex to fix multi-threading issue (#640611)
 - don't crash if we have no D-Bus
 - clean up symbol exports
 - fix a crash in the service when using 'reset'
 - drop old linker options that were for libtool

Changes in dconf 0.7.1
======================

The last release contained a few problems that caused build failures on
some strict linkers.  Those should be fixed now.

Changes in dconf 0.7
====================

 - new library to use dconf with libdbus-1
 - quite a lot of improvements and bug-fixes in dconf-editor, thanks to
   Robert Ancell
 - some bug fixes in the GSettings backend (crashers caused by use if
   custom dconf profiles)
 - some FreeBSD build fixes
 - increased Vala dependency to 0.11.4 (required for dconf-editor fixes)

Changes in dconf 0.6
====================

 - Rewrite a lot of the GSettings backend to reduce GDBus abuse.  We use
   our own worker thread now instead of trying to hijack GDBus's.
 - disable gobject-introspection support for now
 - drop support for GTK2 in dconf-editor
 - Add a new torture-test case
 - Increase dbus timeout to 2 minutes (in case the service is heavily loaded)
 - Fix several memory leaks and other bugs

Changes in dconf 0.5.1
======================

 - Adjust to GDBus API changes
 - Send correct object path in Notify on WriteMany
 - Use printf() and exit() instead of g_error() to avoid too many crash
   reports for now
 - Require gobject-introspection 0.9.5
 - Require vala 0.9.5
 - Make dconf-editor optional
 - Drop libgee requirement for dconf-editor
 - Tweak shared library installation to make ldconfig happy
 - Bump .gir version to dconf-1.0
 - Fix introspection build with recent gobject-introspection
 - Minor bug fixes

Changes in dconf 0.5
=====================

 - Include a dconf-editor
 - drop libtool
 - allow compiling without gobject-introspection
 - autotools/build fixups
 - repair some broken use of tags
 - many updates for glib API changes
 - fix a crasher in the service
 - prefer 'automake-1.11' if it is in the path
 - add support for layering (ie: for system defaults)
 - add support for multiple writers in one service
 - add a shared memory status region to indicate if the gvdb is stale
     this prevents dconf from having to reopen the file each time
 - support keyfile-maintained system settings (via 'dconf update')
 - port client library and commandline tool to vala
 - client library no longer has unimplemented calls
   (except for write_many_async, due to bugs in valac)
 - gtk-doc is now complete for the client library
 - install our own vapi
 - support 'reset' in the GSettingsBackend

Changes in dconf 0.4
=====================

 - fix crashes when the dconf database doesn't yet exist
 - add some incomplete gtk-doc
 - use new GVDB (note: dconf file format has incompatibly changed)
 - implement GSettings sync()
 - use string tags instead of sequence numbers since it was impossible
   to have universally unique sequence numbers
 - theoretical support for sharing dconf databases between machines with
   different byte orders
 - fix bug where first write was not successful when auto-starting
   service
 - FreeBSD build fixes
 - client API cleanups
 - GObject introspection support
 - enable automake silent rules by default for tarball builds
